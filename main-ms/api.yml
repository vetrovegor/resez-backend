openapi: 3.0.0
info:
  title: Main microservice
  version: 1.0.0
  description: API Documentation for main microservice
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: number
          example: 1
        nickname:
          type: string
          example: xw1nchester
        avatar:
          type: string
          example: http://localhost:8080/api/static/avatars/1715447451335.jpeg
    File:
      required:
        - url
        - name
        - type
        - size
      type: object
      properties:
        url:
          type: string
          example: http://localhost:8086/api/static/1734957405939.jpeg
        name:
          type: string
          example: dog.jpeg
        type:
          type: string
          example: image/jpeg
        size:
          type: number
          example: 100500
    MessageRequestBody:
      type: object
      properties:
        message:
          type: string
          example: Киффлом
        files:
          type: array
          items:
            $ref: "#/components/schemas/File"
    MessageResponseBody:
      type: object
      properties:
        id: 
          type: number
          example: 1
        message:
          type: string
          example: Киффлом
        type:
          type: string
          enum:
            - Default
            - Deleted
            - System
            - Voice
            - Video
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        isEdited:
          type: boolean
          example: false
        sender:
            $ref: "#/components/schemas/User"
        isRead:
          type: boolean
          nullable: true
          example: true
        readers:
          type: array
          nullable: true
          items:
            allOf:
              - $ref: "#/components/schemas/User"
              - properties:
                  readDate:
                    type: string
                    format: date-time
        chatId:
          type: number
          example: 1
        files:
          type: array
          items:
            allOf:
              - properties:
                  id:
                    type: number
                    example: 1
              - $ref: "#/components/schemas/File"
    ChatResponseBody:
      type: object
      properties:
        id: 
          type: number
          example: 1
        isGroup:
          type: boolean
          example: false
        userId: 
          type: number
          example: 1
        chat:
          type: string
          example: xw1nchester
        isLeft:
          type: boolean
          example: false
        isKicked:
          type: boolean
          example: false
        picture:
          type: string
          example: http://localhost:8080/api/static/avatars/1715447451335.jpeg
        inviteLink:
          type: string
          example: +cz2wNcjtuLiLZxtb
        activity:
          type: object
          properties:
            isOnline:
              type: boolean
              example: false
            lastSeen:
              type: string
              format: date-time
        isAdmin:
          type: boolean
          example: false
        membersCount: 
          type: number
          example: 3
        unreadMessagesCount: 
          type: number
          example: 5
        latestMessage: 
          $ref: "#/components/schemas/MessageResponseBody"
      required:
        - id
        - isGroup
        - chat
        - picture
        - isAdmin
        - membersCount
        - unreadMessagesCount
        - latestMessage
    PaginationBodyFields:
      type: object
      properties:
        totalCount:
          type: number
          example: 20
        isLast:
          type: boolean
          example: false
        elementsCount:
          type: number
          example: 5
  parameters:
    Limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        default: 5
    Offset:
      name: offset
      in: query
      required: false
      schema:
        type: integer
        default: 0
    Unread:
      name: unread
      in: query
      required: false
      schema:
        type: boolean
  requestBodies:
    Message:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageRequestBody'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

security:
  - BearerAuth: []

paths:
  /api/messenger/message/user/{userId}:
    post:
      tags:
        - Messenger
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        $ref: "#/components/requestBodies/Message"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponseBody"
        "400":
          description: "Validation Error"
        "401":
          description: "Unauthorized"
        "500":
          description: "Internal Server Error"
  /api/messenger/message/chat/{chatId}:
    post:
      tags:
        - Messenger
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        $ref: "#/components/requestBodies/Message"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponseBody"
        "400":
          description: "Validation Error"
        "401":
          description: "Unauthorized"
        "500":
          description: "Internal Server Error"
  /api/messenger/message/{messageId}/read:
    patch:
      tags:
        - Messenger
      summary: The current message and all previous messages are being read
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: number
      responses:
        "200":
          description: "Success"
        "400":
          description: "Validation Error"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"
        "500":
          description: "Internal Server Error"
  /api/messenger/chat/unread-count:
    get:
      tags:
        - Messenger
      summary: Getting the number of chats in which there are unread messages
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    example: 5
        "401":
          description: "Unauthorized"
        "500":
          description: "Internal Server Error"
  /api/messenger/chat:
    get:
      tags:
        - Messenger
      parameters:
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/Offset"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - properties:
                      chats:
                        type: array
                        items:
                          $ref: "#/components/schemas/ChatResponseBody"
                  - $ref: "#/components/schemas/PaginationBodyFields"
        "401":
          description: "Unauthorized"
        "500":
          description: "Internal Server Error"
  /api/messenger/chat/{chatId}:
    get:
      tags:
        - Messenger
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: number
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  chat:
                    $ref: "#/components/schemas/ChatResponseBody"
                  messages:
                    type: array
                    items:
                      $ref: "#/components/schemas/MessageResponseBody"
        "401":
          description: "Unauthorized"
        "500":
          description: "Internal Server Error"